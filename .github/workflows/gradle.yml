# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew clean build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        path: build/libs/*.jar

##  배포 스크립트
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        path: build/libs/

    - name: Deploy to EC2
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > $GITHUB_WORKSPACE/nojam.pem
        chmod 400 $GITHUB_WORKSPACE/nojam.pem
        ssh-add $GITHUB_WORKSPACE/.ssh/private_key.pem
        scp -i $GITHUB_WORKSPACE/nojam.pem -o StrictHostKeyChecking=no build/libs/*.jar \
        ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST_IP }}:/home/${{ secrets.EC2_USERNAME }}/nojamServer.jar
        ssh -i $GITHUB_WORKSPACE/nojam.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST_IP }} \
        "pgrep java | xargs kill -15 nojamServer.jar && nohup java -jar /home/${{ secrets.EC2_USERNAME }}/nojamServer.jar > /home/${{ secrets.EC2_USERNAME }}/app.log 2>&1 &"
        rm -f $GITHUB_WORKSPACE/nojam.pem




